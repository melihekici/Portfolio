{"ast":null,"code":"var _jsxFileName = \"/home/canavar/Desktop/react/tutorial/portfolio/src/Pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AboutMe from \"../components/About/AboutMe\";\nimport ProjectList from \"../components/Project/ProjectList\";\nimport project1Image from \"../assets/Python Developer.jpg\";\nimport project2Image from \"../assets/p2.png\";\nimport Modal from \"../components/UI/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: \"Project1\",\n  name: \"Linkedin Job Scrapper\",\n  image: project1Image,\n  description: \"This is a small web scraping project to scrape linkedin Jobs. The scrapper has a GUI that will take a search term(eg. 'Python Developer') and a Location(eg. 'Turkey') and then it will return the mostly mentioned tech skills required for that position.\",\n  tags: [\"Python\", \"Selenium\"]\n}, {\n  id: \"Project2\",\n  name: \"Web Content Filtering\",\n  image: project2Image,\n  description: \"An image classification project for web content filtering on mobile devices. For the demo, i have created an Flask API with docker as backend which will classify images as Normal, Violence and Adult. From the react app, you will be able to choose your own image from your computer and classify by sending request to the API.\",\n  tags: [\"Image Classification\", \"Python\", \"Docker\", \"Flask\", \"Tensorflow\"]\n}, {\n  id: \"Project3\",\n  name: \"Project3\",\n  image: \"https://picsum.photos/id/17/800/600\",\n  description: \"Project3 description\",\n  tags: []\n}, {\n  id: \"Project4\",\n  name: \"Project4\",\n  image: \"https://picsum.photos/id/133/800/600\",\n  description: \"Project4 description\",\n  tags: []\n}, {\n  id: \"Project5\",\n  name: \"Project5\",\n  image: \"https://picsum.photos/id/44/800/600\",\n  description: \"Project5 description\",\n  tags: []\n}];\n\nfunction HomePage() {\n  _s();\n\n  const [currentProject, setCurrentProject] = useState(projects[0]);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const modalVisibleHandler = () => {\n    setModalVisible(prevState => {\n      prevState ? setModalVisible(false) : setModalVisible(true);\n    });\n  };\n\n  const projectChangeHandler = project => {\n    setCurrentProject(project);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      onCloseModal: modalVisibleHandler,\n      visible: modalVisible,\n      project: currentProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      onOpenModal: modalVisibleHandler,\n      onProjectChange: projectChangeHandler,\n      projects: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"tHSAfnvfubmNLHNECHOL9w50Grg=\");\n\n_c = HomePage;\n;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/canavar/Desktop/react/tutorial/portfolio/src/Pages/HomePage.js"],"names":["React","useState","AboutMe","ProjectList","project1Image","project2Image","Modal","projects","id","name","image","description","tags","HomePage","currentProject","setCurrentProject","modalVisible","setModalVisible","modalVisibleHandler","prevState","projectChangeHandler","project"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,IAAI,EAAE,uBAFR;AAGEC,EAAAA,KAAK,EAAEN,aAHT;AAIEO,EAAAA,WAAW,EAAE,6PAJf;AAKEC,EAAAA,IAAI,EAAE,CAAC,QAAD,EAAW,UAAX;AALR,CADe,EAQf;AACEJ,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,IAAI,EAAE,uBAFR;AAGEC,EAAAA,KAAK,EAAEL,aAHT;AAIEM,EAAAA,WAAW,EAAE,sUAJf;AAKEC,EAAAA,IAAI,EAAE,CAAC,sBAAD,EAAyB,QAAzB,EAAmC,QAAnC,EAA6C,OAA7C,EAAsD,YAAtD;AALR,CARe,EAef;AACEJ,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE,qCAHT;AAIEC,EAAAA,WAAW,EAAE,sBAJf;AAKEC,EAAAA,IAAI,EAAE;AALR,CAfe,EAsBf;AACEJ,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE,sCAHT;AAIEC,EAAAA,WAAW,EAAE,sBAJf;AAKEC,EAAAA,IAAI,EAAE;AALR,CAtBe,EA6Bf;AACEJ,EAAAA,EAAE,EAAE,UADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,KAAK,EAAE,qCAHT;AAIEC,EAAAA,WAAW,EAAE,sBAJf;AAKEC,EAAAA,IAAI,EAAE;AALR,CA7Be,CAAjB;;AAuCA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAACM,QAAQ,CAAC,CAAD,CAAT,CAApD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMiB,mBAAmB,GAAG,MAAM;AAChCD,IAAAA,eAAe,CAAEE,SAAD,IAAe;AAC7BA,MAAAA,SAAS,GAAGF,eAAe,CAAC,KAAD,CAAlB,GAA4BA,eAAe,CAAC,IAAD,CAApD;AACD,KAFc,CAAf;AAGD,GAJD;;AAMA,QAAMG,oBAAoB,GAAIC,OAAD,IAAa;AACxCN,IAAAA,iBAAiB,CAACM,OAAD,CAAjB;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,YAAY,EAAEH,mBAArB;AAA0C,MAAA,OAAO,EAAEF,YAAnD;AAAiE,MAAA,OAAO,EAAEF;AAA1E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,WAAW,EAAEI,mBAA1B;AAA+C,MAAA,eAAe,EAAEE,oBAAhE;AAAsF,MAAA,QAAQ,EAAEb;AAAhG;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQM,Q;;KAAAA,Q;AAqBR;AAED,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AboutMe from \"../components/About/AboutMe\";\nimport ProjectList from \"../components/Project/ProjectList\";\n\nimport project1Image from \"../assets/Python Developer.jpg\";\nimport project2Image from \"../assets/p2.png\"\nimport Modal from \"../components/UI/Modal/Modal\";\n\nconst projects = [\n  {\n    id: \"Project1\",\n    name: \"Linkedin Job Scrapper\",\n    image: project1Image,\n    description: \"This is a small web scraping project to scrape linkedin Jobs. The scrapper has a GUI that will take a search term(eg. 'Python Developer') and a Location(eg. 'Turkey') and then it will return the mostly mentioned tech skills required for that position.\",\n    tags: [\"Python\", \"Selenium\"]\n  },\n  {\n    id: \"Project2\",\n    name: \"Web Content Filtering\",\n    image: project2Image,\n    description: \"An image classification project for web content filtering on mobile devices. For the demo, i have created an Flask API with docker as backend which will classify images as Normal, Violence and Adult. From the react app, you will be able to choose your own image from your computer and classify by sending request to the API.\",\n    tags: [\"Image Classification\", \"Python\", \"Docker\", \"Flask\", \"Tensorflow\"]\n  },\n  {\n    id: \"Project3\",\n    name: \"Project3\",\n    image: \"https://picsum.photos/id/17/800/600\",\n    description: \"Project3 description\",\n    tags: []\n  },\n  {\n    id: \"Project4\",\n    name: \"Project4\",\n    image: \"https://picsum.photos/id/133/800/600\",\n    description: \"Project4 description\",\n    tags: []\n  },\n  {\n    id: \"Project5\",\n    name: \"Project5\",\n    image: \"https://picsum.photos/id/44/800/600\",\n    description: \"Project5 description\",\n    tags: []\n  }\n];\n\n\nfunction HomePage() {\n  const [currentProject, setCurrentProject] = useState(projects[0]);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const modalVisibleHandler = () => {\n    setModalVisible((prevState) => {\n      prevState ? setModalVisible(false) : setModalVisible(true);\n    });\n  };\n\n  const projectChangeHandler = (project) => {\n    setCurrentProject(project);\n  };\n\n  return (\n    <React.Fragment>\n      <Modal onCloseModal={modalVisibleHandler} visible={modalVisible} project={currentProject}></Modal>\n      <AboutMe></AboutMe>\n      <ProjectList onOpenModal={modalVisibleHandler} onProjectChange={projectChangeHandler} projects={projects}></ProjectList>\n    </React.Fragment>\n    );\n};\n  \nexport default HomePage;\n  \n"]},"metadata":{},"sourceType":"module"}